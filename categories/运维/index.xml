<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>运维 on 鬼画桃符</title><link>https://tab.deoops.com/categories/%E8%BF%90%E7%BB%B4/</link><description>Recent content in 运维 on 鬼画桃符</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 19 May 2022 09:30:03 +0800</lastBuildDate><atom:link href="https://tab.deoops.com/categories/%E8%BF%90%E7%BB%B4/index.xml" rel="self" type="application/rss+xml"/><item><title>It's ALWAYS DNS!</title><link>https://tab.deoops.com/posts/always-dns/</link><pubDate>Thu, 19 May 2022 09:30:03 +0800</pubDate><guid>https://tab.deoops.com/posts/always-dns/</guid><description>今天前端遇到一个问题，前端部署的[反向代理]](/posts/nginx-proxy/)到后端的upstream一直pending。 time</description></item><item><title>mysql空磁盘挂卷问题</title><link>https://tab.deoops.com/posts/lost-found/</link><pubDate>Wed, 11 May 2022 14:19:55 +0800</pubDate><guid>https://tab.deoops.com/posts/lost-found/</guid><description>今天在tke上部署mysql pod，以为很简单。结果发现pod一直crash，查看日志发现是挂卷的问题： [ERROR] --initialize specified but the data directory has files in it. Aborting. 解决办法很简</description></item><item><title>循环播放gif图片</title><link>https://tab.deoops.com/posts/gif-loop/</link><pubDate>Thu, 18 Nov 2021 17:23:48 +0800</pubDate><guid>https://tab.deoops.com/posts/gif-loop/</guid><description>install 首先使用macport安装 imagemagick软件包，因为macport是编译安装软件包，所以安装过程会比较久（~9min）。 更加习惯h</description></item><item><title>bash简介</title><link>https://tab.deoops.com/posts/bash-command/</link><pubDate>Wed, 17 Nov 2021 10:06:54 +0800</pubDate><guid>https://tab.deoops.com/posts/bash-command/</guid><description>本文会不定期更新 :) set 可以使用set命令改变shell脚本默认的执行流程。 比如 set -e 可以使得shell脚本遇到某一条命令出错（ echo $? 不为0）时立即</description></item><item><title>更换brew源</title><link>https://tab.deoops.com/posts/brew-repo/</link><pubDate>Fri, 14 Aug 2020 11:33:00 +0800</pubDate><guid>https://tab.deoops.com/posts/brew-repo/</guid><description>国内网络环境日益恶劣，执行brew update/upgrade花费的时间够我泡好一壶普洱茶。 不过好景不长，谁能想到那么大的普洱茶饼，日积月累</description></item><item><title>设置dns</title><link>https://tab.deoops.com/posts/macos-dns/</link><pubDate>Wed, 10 Jun 2020 22:20:03 +0800</pubDate><guid>https://tab.deoops.com/posts/macos-dns/</guid><description>众所周知，修改/etc/resolv.conf配置文件可以配置Linux的dns 解析服务器。 [root@VM-8-3-centos ~]# cat /etc/resolv.conf # Generated by NetworkManager nameserver 183.60.83.19 nameserver 183.60.82.98 那么苹果系统的dns 解析</description></item><item><title>socat工具</title><link>https://tab.deoops.com/posts/socat-usage/</link><pubDate>Tue, 14 Apr 2020 09:50:07 +0800</pubDate><guid>https://tab.deoops.com/posts/socat-usage/</guid><description>众所周知kubenetest的端口转发功能kubectl port-forward非常实用，可以提高开发人员的debug效率。 其实kubect</description></item><item><title>SSH代理（Agent）</title><link>https://tab.deoops.com/posts/ssh-agent/</link><pubDate>Sun, 12 Apr 2020 11:34:44 +0800</pubDate><guid>https://tab.deoops.com/posts/ssh-agent/</guid><description>问题 已知本地local可以ssh到server A和B， 问如何从server A ssh到server B，以及如何在server A 和B之间使用sc</description></item><item><title>Expect自动化工具简介</title><link>https://tab.deoops.com/posts/expect-interactive/</link><pubDate>Thu, 19 Mar 2020 16:07:45 +0800</pubDate><guid>https://tab.deoops.com/posts/expect-interactive/</guid><description>公司服务器使用了两层跳板机，外面的一台我们管它叫 server A， 另外一台 叫它 server B。 虽然我不知道这种双保险给公司带来了多少安全感，但是我知道我的运维效率</description></item><item><title>容器PID</title><link>https://tab.deoops.com/posts/container-pid/</link><pubDate>Fri, 13 Mar 2020 22:43:32 +0800</pubDate><guid>https://tab.deoops.com/posts/container-pid/</guid><description>架构部的同事问了我两个问题: 宿主机上有个进程很耗 cpu，怎么判断它是不是某个容器的进程; 如果它是跑在容器里，怎么查到是哪个容器(contai</description></item><item><title>安装wireguard</title><link>https://tab.deoops.com/posts/try-wireguard/</link><pubDate>Mon, 06 Jan 2020 16:50:26 +0800</pubDate><guid>https://tab.deoops.com/posts/try-wireguard/</guid><description>今天在hacker news上看到 wireguard macos client 发布了，决定试用一下。 和所有的vpn安装一样，wireguard的安装也是分两步，一是安装vpn ser</description></item><item><title>挂载硬盘</title><link>https://tab.deoops.com/posts/load-disk/</link><pubDate>Fri, 18 Oct 2019 10:03:07 +0800</pubDate><guid>https://tab.deoops.com/posts/load-disk/</guid><description>update: more user friendly #bin/bash mustBeRoot() { if [ &amp;#34;$(id -u)&amp;#34; != &amp;#34;0&amp;#34; ]; then echo &amp;#34;只有root用户才能运行&amp;#34; 1&amp;gt;&amp;amp;2 echo &amp;#34;当前登录用户`whoami`&amp;#34; exit 1 fi } # 数</description></item><item><title>证书问题</title><link>https://tab.deoops.com/posts/container-ca/</link><pubDate>Thu, 12 Sep 2019 10:11:32 +0800</pubDate><guid>https://tab.deoops.com/posts/container-ca/</guid><description>docker run调试某个container报如下所示x509证书错误，一开始怀疑是容器网络（--network host) 的问题 : [deoops@dev-3 ~]# docker run --network host datewu/controller:v0.0.2 {&amp;#34;level&amp;#34;:&amp;#34;panic&amp;#34;,&amp;#34;error&amp;#34;:&amp;#34;Get https://google.com: x509: certificate signed by unknown</description></item><item><title>细说kubeconfig</title><link>https://tab.deoops.com/posts/explain-kubeconfig/</link><pubDate>Sun, 11 Aug 2019 22:09:21 +0800</pubDate><guid>https://tab.deoops.com/posts/explain-kubeconfig/</guid><description>今天准备管理某一个kubernetes 集群时发现master主机22端口因为管理的需要被禁用了，无法登陆服务器。 问了一下运维人员，原来是基于</description></item><item><title>Systemd配置问题</title><link>https://tab.deoops.com/posts/systemd-conf/</link><pubDate>Sat, 11 May 2019 16:02:39 +0800</pubDate><guid>https://tab.deoops.com/posts/systemd-conf/</guid><description>问题 用 kubeadm 部署 kubernetes 集群，启动kubelet服务后，kubelet daemon 会认为 /etc/sysconfig/kubelet内容的优先级更高， 覆盖KUB</description></item><item><title>Neutron小记</title><link>https://tab.deoops.com/posts/neutron-port/</link><pubDate>Sun, 21 Apr 2019 18:39:27 +0800</pubDate><guid>https://tab.deoops.com/posts/neutron-port/</guid><description>前段时间的花了很多功夫对接k8s和openstack的kuryr-kubernetes网路组件。 学到了很多openstack的知识，今天抽出</description></item><item><title>Mysql Autocommit问题</title><link>https://tab.deoops.com/posts/mysql-autocommit/</link><pubDate>Fri, 12 Apr 2019 10:37:04 +0800</pubDate><guid>https://tab.deoops.com/posts/mysql-autocommit/</guid><description>客户反馈我们的产品有个很奇怪的问题。 添加完商品后，可以看到商品，但是一刷新页面，刚才添加的商品就消失啦。 以前没碰到过，一直都用的好好的为什么</description></item><item><title>Macvlan路由规则</title><link>https://tab.deoops.com/posts/macvlan-route/</link><pubDate>Mon, 11 Mar 2019 11:33:48 +0800</pubDate><guid>https://tab.deoops.com/posts/macvlan-route/</guid><description>对macvlan 不熟悉的同学，可以先看下这篇macvlan virtual network简介 默认情况下Linux kernel会阻止(drop)宿主机（ho</description></item><item><title>无法创建macvlan设备</title><link>https://tab.deoops.com/posts/macvlan-busy/</link><pubDate>Thu, 07 Mar 2019 11:17:49 +0800</pubDate><guid>https://tab.deoops.com/posts/macvlan-busy/</guid><description>最近给客户调试 macvlan network时，遇到了Linux kernel 报错 SIOCSIFFKAGS: Device or resource busy. 无法创建网络device。 结果长时间的debug分析， 发现问题是高并发压测</description></item><item><title>pod生命周期事件生成器</title><link>https://tab.deoops.com/posts/pleg-unhealth/</link><pubDate>Mon, 11 Feb 2019 10:33:42 +0800</pubDate><guid>https://tab.deoops.com/posts/pleg-unhealth/</guid><description>PLEG 不熟悉PLEG(Pod Lifecycle Event Generator)的同学，可以先看下这篇文章What is PLEG?。 这篇文章对pleg是什么和常见的unheal</description></item><item><title>VPC模式</title><link>https://tab.deoops.com/posts/flannel-vpc/</link><pubDate>Tue, 11 Sep 2018 10:07:04 +0800</pubDate><guid>https://tab.deoops.com/posts/flannel-vpc/</guid><description>之前写了一篇post 适配腾讯云backend 的文章，从代码的角度简单记录了flannel vpc backend实现过程。 这篇文章是对前面文章的补充</description></item><item><title>收集容器syslog</title><link>https://tab.deoops.com/posts/pod-syslog/</link><pubDate>Mon, 03 Sep 2018 20:46:00 +0800</pubDate><guid>https://tab.deoops.com/posts/pod-syslog/</guid><description>有一个app 跑在pod里面，这个app 默认会输出自己的运行日志到syslogd， 请问如何让host主机上运行的syslogd日志收集器收集到</description></item><item><title>调度到master节点</title><link>https://tab.deoops.com/posts/master-affinity/</link><pubDate>Sat, 18 Aug 2018 20:57:52 +0800</pubDate><guid>https://tab.deoops.com/posts/master-affinity/</guid><description>一般来说，kubernetes 的pod是不在master 节点上运行的。 如果要求pod 必须被调度到master 节点上运行，可以修改pod 的 toleration 和</description></item><item><title>替换k8s所有证书</title><link>https://tab.deoops.com/posts/k8s-certs/</link><pubDate>Fri, 10 Aug 2018 20:27:10 +0800</pubDate><guid>https://tab.deoops.com/posts/k8s-certs/</guid><description>客户需要把kubernetes apiserver/etcd/kubelet/kubectl 等所有的证书有效期修改为100年。 很明显这是一个不合理的需求，不过客户说什么就是什么。 于是经几天的调试有了下</description></item><item><title>审计目录</title><link>https://tab.deoops.com/posts/audit-file/</link><pubDate>Wed, 20 Jun 2018 17:02:58 +0800</pubDate><guid>https://tab.deoops.com/posts/audit-file/</guid><description>今天调试容器应用的时候发现，app运行一段时间后，容器外挂的一个volumn会偶发性的被删除。 于是需要监控下到底是谁/哪个进程把文件目录给删</description></item><item><title>内核升级</title><link>https://tab.deoops.com/posts/kernel-upgrade/</link><pubDate>Wed, 16 May 2018 16:50:31 +0800</pubDate><guid>https://tab.deoops.com/posts/kernel-upgrade/</guid><description>众所周知centos的内核版本选择很保守，很多新内核的新特性，特别是网络和debug方面的特性都没有，所以我们来给centos升级下 kern</description></item><item><title>配置vscode eslint</title><link>https://tab.deoops.com/posts/vscode-eslint/</link><pubDate>Mon, 16 Apr 2018 16:34:09 +0800</pubDate><guid>https://tab.deoops.com/posts/vscode-eslint/</guid><description>离职一段时间了，需要自己写点前端代码。 奈何vim的js插件对jsx的支持不太友好，所以转向vscode写点jsx。 写了些react app代码</description></item><item><title>配置http selinux</title><link>https://tab.deoops.com/posts/http-selinux/</link><pubDate>Mon, 16 Apr 2018 16:10:45 +0800</pubDate><guid>https://tab.deoops.com/posts/http-selinux/</guid><description>今天在digitocean一台新申请的主机上部署web应用。部署完成，打开浏览器发现报错403。 部署的web应用很简单，后端用nginx做了</description></item><item><title>pip包冲突</title><link>https://tab.deoops.com/posts/python-import/</link><pubDate>Fri, 30 Mar 2018 10:21:25 +0800</pubDate><guid>https://tab.deoops.com/posts/python-import/</guid><description>遇到一个奇怪的问题执行certbot会报错，moudle conflict和 No module，但是yum install certbot的时候没有报错。 certbot Traceback (most recent</description></item><item><title>部署moodle</title><link>https://tab.deoops.com/posts/install-moodle/</link><pubDate>Tue, 20 Mar 2018 13:58:27 +0800</pubDate><guid>https://tab.deoops.com/posts/install-moodle/</guid><description>客户需要部署一套 moodle 教学系统。 去moodle官网大致看了一圈，发现moodle 是一个典型的PHP web应用。 其实这种LAMP (Linux, Apache, MySQL, PHP/Pe</description></item><item><title>数据库备份</title><link>https://tab.deoops.com/posts/postgresql-backup/</link><pubDate>Sat, 24 Feb 2018 11:21:55 +0800</pubDate><guid>https://tab.deoops.com/posts/postgresql-backup/</guid><description>工作需要定时备份postgresql slave数据库数据数据，服务器上运行了两个slave实例，隶属于两个不同的master。 备份 两个sla</description></item><item><title>两个奴隶</title><link>https://tab.deoops.com/posts/postgre-two-slaves/</link><pubDate>Mon, 05 Feb 2018 21:55:41 +0800</pubDate><guid>https://tab.deoops.com/posts/postgre-two-slaves/</guid><description>一般postgres高可用集群是一个master配一个slave，但是开发这边需要做db的读写分离，所以运维这边 又添加了一台slave专门暴</description></item><item><title>orange网关</title><link>https://tab.deoops.com/posts/try-orange/</link><pubDate>Mon, 05 Feb 2018 19:37:23 +0800</pubDate><guid>https://tab.deoops.com/posts/try-orange/</guid><description>几天之前试用过了kong效果不理想 ，今天来使用下小米出品（存疑？）的 orange网关。 一个明显的区别是 kong的后端存储使用了postgre</description></item><item><title>kong网关</title><link>https://tab.deoops.com/posts/try-kong/</link><pubDate>Sat, 03 Feb 2018 18:05:04 +0800</pubDate><guid>https://tab.deoops.com/posts/try-kong/</guid><description>updated: kong不满足要求，后面调研了另外一个API产品 orange 2015年接触openresty的时候接触过kong，了解到kong是基于openres</description></item><item><title>试用Azure Centos虚拟机</title><link>https://tab.deoops.com/posts/azure-centos/</link><pubDate>Wed, 15 Nov 2017 10:48:20 +0800</pubDate><guid>https://tab.deoops.com/posts/azure-centos/</guid><description>换了份工作，新公司是做加密币交易所的，服务器都在国外。所以有机会接触到了微软的azure云服务， 服务器基本都在亚太区新加坡。 ps：这是我第一</description></item><item><title>查找文件</title><link>https://tab.deoops.com/posts/find-locate/</link><pubDate>Sat, 16 Sep 2017 08:09:57 +0800</pubDate><guid>https://tab.deoops.com/posts/find-locate/</guid><description>TLDR; find: 有很多过滤规则查找文件/目录/设备，而且可以递归查询某一个目录下的目录或文件，最后除了打印查询结果以外，还可以做其它操作（比如删除该文件</description></item><item><title>代理和反向代理</title><link>https://tab.deoops.com/posts/nginx-proxy/</link><pubDate>Fri, 19 May 2017 10:30:05 +0800</pubDate><guid>https://tab.deoops.com/posts/nginx-proxy/</guid><description>代理 proxies (正向)代理 代理一般是指正向代理，比如翻墙软件shadowsocks就是一种正向代理。 shadowsocks通过socks 5协议 在代理</description></item><item><title>缓存静态文件</title><link>https://tab.deoops.com/posts/nginx-cache/</link><pubDate>Sat, 29 Apr 2017 15:36:18 +0800</pubDate><guid>https://tab.deoops.com/posts/nginx-cache/</guid><description>众所周知nginx有很强的分发静态文件的能力，很多时候nginx对静态资源分发能力的瓶颈和redis一样在主机的网卡上。 (一般虚拟机的网卡只</description></item><item><title>安装配置openvpn</title><link>https://tab.deoops.com/posts/install-openvpn/</link><pubDate>Mon, 20 Feb 2017 13:24:19 +0800</pubDate><guid>https://tab.deoops.com/posts/install-openvpn/</guid><description>开发需要能调用facebook的接口，我们运维这边需要配置一台测试服务器能访问facebook，用shadowsocks 和squid 代理，性</description></item><item><title>Ansible</title><link>https://tab.deoops.com/posts/ansible-memo/</link><pubDate>Sat, 16 Apr 2016 11:33:05 +0800</pubDate><guid>https://tab.deoops.com/posts/ansible-memo/</guid><description>本文不定期更新 :) A system administrator&amp;rsquo;s guide to getting started with Ansible ad-hoc 管理集群的时候，常常来不及写playbooks，只需要执行一些ad-hoc查看某些主机的状态， 或者批量修</description></item><item><title>tcp性能调优</title><link>https://tab.deoops.com/posts/tcp-tune/</link><pubDate>Tue, 05 Apr 2016 18:58:52 +0800</pubDate><guid>https://tab.deoops.com/posts/tcp-tune/</guid><description>我们一般会调整内核tcp参数以提高web服务器(比如ngin)的性能。 sysctl 加载Linux 内核配置 sysctl -p /etc/sysctl.d/xxx-xxx.conf meat # /etc/sysctl.d/00-network.conf # Receive Queue Size per CPU Core, number of packets # Example server: 8 cores net.core.netdev_max_backlog =</description></item><item><title>字符串</title><link>https://tab.deoops.com/posts/shell-string/</link><pubDate>Sun, 17 May 2015 15:11:27 +0800</pubDate><guid>https://tab.deoops.com/posts/shell-string/</guid><description>运维人员/系统管理员每天要在终端敲入大量命令，也要修改查看大量文本配置文件，日志信息。 甚至可以夸张一点说Linux/Unix system admin的全</description></item><item><title>谢谢vpngate</title><link>https://tab.deoops.com/posts/try-vpngate/</link><pubDate>Fri, 09 May 2014 16:39:24 +0800</pubDate><guid>https://tab.deoops.com/posts/try-vpngate/</guid><description>在天朝呆久了，有点迫害妄想症。用vpngate出来转转看看，发现确实是我想多了。 anyway，谢谢vpngate，挺不错的vpn。</description></item></channel></rss>